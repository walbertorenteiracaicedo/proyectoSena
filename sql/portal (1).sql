COMMENT ON SCHEMA public IS NULL;

/************ Add: Sequences ***************/

/* Autogenerated Sequences */

CREATE SEQUENCE detalle_pqrs_id_seq INCREMENT BY 1;
COMMENT ON SEQUENCE detalle_pqrs_id_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE estado_pqrs_id_seq INCREMENT BY 1;
COMMENT ON SEQUENCE estado_pqrs_id_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE pqrs_id_seq INCREMENT BY 1;
COMMENT ON SEQUENCE pqrs_id_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE tarifa_id_seq INCREMENT BY 1;
COMMENT ON SEQUENCE tarifa_id_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE tipo_pqrs_id_seq INCREMENT BY 1;
COMMENT ON SEQUENCE tipo_pqrs_id_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE categoria_id_seq INCREMENT BY 1;
COMMENT ON SEQUENCE categoria_id_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE dato_usuario_id_seq INCREMENT BY 1;
COMMENT ON SEQUENCE dato_usuario_id_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE evento_id_seq INCREMENT BY 1;
COMMENT ON SEQUENCE evento_id_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE evento_patrocinador_id_seq INCREMENT BY 1;
COMMENT ON SEQUENCE evento_patrocinador_id_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE localidad_id_seq INCREMENT BY 1;
COMMENT ON SEQUENCE localidad_id_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE organizacion_id_seq INCREMENT BY 1;
COMMENT ON SEQUENCE organizacion_id_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE patrocinador_id_seq INCREMENT BY 1;
COMMENT ON SEQUENCE patrocinador_id_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE recaudo_economico_id_seq INCREMENT BY 1;
COMMENT ON SEQUENCE recaudo_economico_id_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE tipo_documento_id_seq INCREMENT BY 1;
COMMENT ON SEQUENCE tipo_documento_id_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE usuario_gusta_categoria_id_seq INCREMENT BY 1;
COMMENT ON SEQUENCE usuario_gusta_categoria_id_seq IS 'DbWrench Autogenerated Sequence.';



/************ Update: Tables ***************/

/******************** Add Table: bitacora ************************/

/* Build Table Structure */



/******************** Add Table: categoria ************************/

/* Build Table Structure */
CREATE TABLE categoria
(
	id BIGINT DEFAULT nextval('categoria_id_seq'::regclass) NOT NULL,
	created_at TIMESTAMP DEFAULT now() NOT NULL,
	updated_at TIMESTAMP DEFAULT now() NOT NULL,
	deleted_at TIMESTAMP NULL,
	nombre VARCHAR(45) NOT NULL
) WITHOUT OIDS;

/* Add Primary Key */
ALTER TABLE categoria ADD CONSTRAINT pkcategoria
	PRIMARY KEY (id);


/******************** Add Table: credencial ************************/

/* Build Table Structure */

/******************** Add Table: dato_usuario ************************/

/* Build Table Structure */
CREATE TABLE dato_usuario
(
	id BIGINT DEFAULT nextval('dato_usuario_id_seq'::regclass) NOT NULL,
	created_at TIMESTAMP DEFAULT now() NOT NULL,
	updated_at TIMESTAMP DEFAULT now() NOT NULL,
	deleted_at TIMESTAMP NULL,
	usuario_id BIGINT NOT NULL,
	nombre VARCHAR(45) NOT NULL,
	apellido VARCHAR(45) NOT NULL,
	correo VARCHAR(70) NOT NULL,
	genero BOOL NOT NULL,
	fecha_nacimiento DATE NOT NULL,
	localidad_id BIGINT NOT NULL,
	tipo_documento_id BIGINT NOT NULL,
	organizacion_id BIGINT NULL
) WITHOUT OIDS;

/* Add Primary Key */
ALTER TABLE dato_usuario ADD CONSTRAINT pkdato_usuario
	PRIMARY KEY (id);

/* Add Comments */
COMMENT ON COLUMN dato_usuario.genero IS 'true = femenino | false = masculino';

/* Add Indexes */
CREATE INDEX "dato_usuario_localidad_id_Idx" ON dato_usuario USING btree (localidad_id);

CREATE INDEX "dato_usuario_organizacion_id_Idx" ON dato_usuario USING btree (organizacion_id);

CREATE INDEX "dato_usuario_tipo_documento_id_Idx" ON dato_usuario USING btree (tipo_documento_id);

CREATE UNIQUE INDEX "dato_usuario_usuario_id_Idx" ON dato_usuario USING btree (usuario_id);


/******************** Add Table: detalle_pqrs ************************/

/* Build Table Structure */
CREATE TABLE detalle_pqrs
(
	id BIGINT DEFAULT nextval('public.detalle_pqrs_id_seq'::regclass) NOT NULL,
	created_at TIMESTAMP DEFAULT now() NOT NULL,
	updated_at TIMESTAMP DEFAULT now() NOT NULL,
	deleted_at TIMESTAMP NULL,
	pqrs_id BIGINT NOT NULL,
	respuesta VARCHAR(2048) NOT NULL,
	usuario_id BIGINT NOT NULL
) WITHOUT OIDS;

/* Add Primary Key */
ALTER TABLE detalle_pqrs ADD CONSTRAINT pkdetalle_pqrs
	PRIMARY KEY (id);

/* Add Indexes */
CREATE INDEX "detalle_pqrs_pqrs_id_Idx" ON detalle_pqrs (pqrs_id);

CREATE INDEX "detalle_pqrs_usuario_id_Idx" ON detalle_pqrs (usuario_id);


/******************** Add Table: estado_pqrs ************************/

/* Build Table Structure */
CREATE TABLE estado_pqrs
(
	id BIGINT DEFAULT nextval('public.estado_pqrs_id_seq'::regclass) NOT NULL,
	nombre VARCHAR(50) NOT NULL,
	actived BOOL DEFAULT 't' NOT NULL,
	created_at TIMESTAMP DEFAULT now() NOT NULL,
	updated_at TIMESTAMP DEFAULT now() NOT NULL,
	deleted_at TIMESTAMP NULL
) WITHOUT OIDS;

/* Add Primary Key */
ALTER TABLE estado_pqrs ADD CONSTRAINT pkestado_pqrs
	PRIMARY KEY (id);

/* Add Comments */
COMMENT ON COLUMN estado_pqrs.actived IS 'TRUE activado ; FALSE desactivado';


/******************** Add Table: evento ************************/

/* Build Table Structure */
CREATE TABLE evento
(
	id BIGINT DEFAULT nextval('evento_id_seq'::regclass) NOT NULL,
	created_at TIMESTAMP DEFAULT now() NOT NULL,
	updated_at TIMESTAMP DEFAULT now() NOT NULL,
	deleted_at TIMESTAMP NULL,
	imagen VARCHAR(37) NULL,
	nombre VARCHAR(45) NOT NULL,
	descripcion VARCHAR(1024) NOT NULL,
	fecha_inicial_evento TIMESTAMP NOT NULL,
	fecha_final_evento TIMESTAMP NOT NULL,
	lugar_latitud VARCHAR(100) NOT NULL,
	lugar_longitud VARCHAR(100) NOT NULL,
	direccion VARCHAR(150) NOT NULL,
	costo INTEGER DEFAULT 0 NULL,
	usuario_id BIGINT NOT NULL,
	categoria_id BIGINT NULL,
	fecha_inicial_publicacion TIMESTAMP NOT NULL,
	fecha_final_publicacion TIMESTAMP NOT NULL
) WITHOUT OIDS;

/* Add Primary Key */
ALTER TABLE evento ADD CONSTRAINT pkevento
	PRIMARY KEY (id);

/* Add Indexes */
CREATE INDEX "evento_categoria_id_Idx" ON evento USING btree (categoria_id);

CREATE INDEX "evento_usuario_id_Idx" ON evento USING btree (usuario_id);


/******************** Add Table: evento_patrocinador ************************/

/* Build Table Structure */
CREATE TABLE evento_patrocinador
(
	id BIGINT DEFAULT nextval('evento_patrocinador_id_seq'::regclass) NOT NULL,
	created_at TIMESTAMP DEFAULT now() NOT NULL,
	updated_at TIMESTAMP DEFAULT now() NOT NULL,
	deleted_at TIMESTAMP NULL,
	evento_id BIGINT NOT NULL,
	patrocinador_id BIGINT NOT NULL
) WITHOUT OIDS;

/* Add Primary Key */
ALTER TABLE evento_patrocinador ADD CONSTRAINT pkevento_patrocinador
	PRIMARY KEY (id);

/* Add Indexes */
CREATE INDEX "evento_patrocinador_evento_id_Idx" ON evento_patrocinador USING btree (evento_id);

CREATE UNIQUE INDEX "evento_patrocinador_evento_id_patrocinador_id_Idx" ON evento_patrocinador USING btree (evento_id, patrocinador_id);

CREATE INDEX "evento_patrocinador_patrocinador_id_Idx" ON evento_patrocinador USING btree (patrocinador_id);


/******************** Add Table: localidad ************************/

/* Build Table Structure */
CREATE TABLE localidad
(
	id BIGINT DEFAULT nextval('localidad_id_seq'::regclass) NOT NULL,
	created_at TIMESTAMP DEFAULT now() NOT NULL,
	updated_at TIMESTAMP DEFAULT now() NOT NULL,
	deleted_at TIMESTAMP NULL,
	nombre VARCHAR(45) NOT NULL,
	localidad_id BIGINT NULL
) WITHOUT OIDS;

/* Add Primary Key */
ALTER TABLE localidad ADD CONSTRAINT pklocalidad
	PRIMARY KEY (id);

/* Add Indexes */
CREATE INDEX "localidad_localidad_id_Idx" ON localidad USING btree (localidad_id);


/******************** Add Table: organizacion ************************/

/* Build Table Structure */
CREATE TABLE organizacion
(
	id BIGINT DEFAULT nextval('organizacion_id_seq'::regclass) NOT NULL,
	created_at TIMESTAMP DEFAULT now() NOT NULL,
	updated_at TIMESTAMP DEFAULT now() NOT NULL,
	deleted_at TIMESTAMP NULL,
	nombre VARCHAR(45) NOT NULL,
	direccion VARCHAR(200) NOT NULL,
	telefono VARCHAR(45) NOT NULL,
	fax VARCHAR(45) NULL,
	correo VARCHAR(100) NOT NULL,
	pagina_web VARCHAR(100) NULL
) WITHOUT OIDS;

/* Add Primary Key */
ALTER TABLE organizacion ADD CONSTRAINT pkorganizacion
	PRIMARY KEY (id);


/******************** Add Table: patrocinador ************************/

/* Build Table Structure */
CREATE TABLE patrocinador
(
	id BIGINT DEFAULT nextval('patrocinador_id_seq'::regclass) NOT NULL,
	created_at TIMESTAMP DEFAULT now() NOT NULL,
	updated_at TIMESTAMP DEFAULT now() NOT NULL,
	deleted_at TIMESTAMP NULL,
	nombre VARCHAR(45) NOT NULL,
	telefono VARCHAR(10) NULL,
	correo VARCHAR(150) NOT NULL,
	direccion VARCHAR(150) NULL
) WITHOUT OIDS;

/* Add Primary Key */
ALTER TABLE patrocinador ADD CONSTRAINT pkpatrocinador
	PRIMARY KEY (id);


/******************** Add Table: pqrs ************************/

/* Build Table Structure */
CREATE TABLE pqrs
(
	id BIGINT DEFAULT nextval('public.pqrs_id_seq'::regclass) NOT NULL,
	tipo_pqrs_id BIGINT NOT NULL,
	estado_pqrs_id BIGINT NOT NULL,
	created_at TIMESTAMP DEFAULT now() NOT NULL,
	updated_at TIMESTAMP DEFAULT now() NOT NULL,
	deleted_at TIMESTAMP NULL,
	titulo VARCHAR(50) NOT NULL,
	contenido VARCHAR(2048) NOT NULL,
	usuario_id BIGINT NOT NULL
) WITHOUT OIDS;

/* Add Primary Key */
ALTER TABLE pqrs ADD CONSTRAINT pkpqrs
	PRIMARY KEY (id);

/* Add Indexes */
CREATE INDEX "pqrs_tipo_pqrs_id_Idx" ON pqrs (tipo_pqrs_id);

CREATE INDEX "pqrs_usuario_id_Idx" ON pqrs (usuario_id);


/******************** Add Table: recaudo_economico ************************/

/* Build Table Structure */
CREATE TABLE recaudo_economico
(
	id BIGINT DEFAULT nextval('recaudo_economico_id_seq'::regclass) NOT NULL,
	created_at TIMESTAMP DEFAULT now() NOT NULL,
	updated_at TIMESTAMP DEFAULT now() NOT NULL,
	deleted_at TIMESTAMP NULL,
	evento_id BIGINT NOT NULL,
	usuario_id BIGINT NOT NULL,
	observacion VARCHAR(1024) NULL,
	tarifa_id BIGINT NOT NULL,
	valor_total BIGINT DEFAULT 0 NOT NULL,
	valor_parcial BIGINT DEFAULT 0 NOT NULL
) WITHOUT OIDS;

/* Add Primary Key */
ALTER TABLE recaudo_economico ADD CONSTRAINT pkrecaudo_economico
	PRIMARY KEY (id);

/* Add Indexes */
CREATE INDEX "recaudo_economico_evento_id_Idx" ON recaudo_economico USING btree (evento_id);

CREATE INDEX "recaudo_economico_tarifa_id_Idx" ON recaudo_economico (tarifa_id);

CREATE INDEX "recaudo_economico_usuario_id_Idx" ON recaudo_economico USING btree (usuario_id);


/******************** Add Table: recordar_me ************************/

/* Build Table Structure */



/******************** Add Table: tarifa ************************/

/* Build Table Structure */
CREATE TABLE tarifa
(
	id BIGINT DEFAULT nextval('public.tarifa_id_seq'::regclass) NOT NULL,
	created_at TIMESTAMP DEFAULT now() NOT NULL,
	updated_at TIMESTAMP DEFAULT now() NOT NULL,
	deleted_at TIMESTAMP NULL,
	descripcion VARCHAR(1024) NOT NULL,
	valor BIGINT NOT NULL,
	actived BOOL DEFAULT 't' NOT NULL
) WITHOUT OIDS;

/* Add Primary Key */
ALTER TABLE tarifa ADD CONSTRAINT pktarifa
	PRIMARY KEY (id);

/* Add Comments */
COMMENT ON COLUMN tarifa.actived IS 'TRUE activado ; FALSE desactivado';


/******************** Add Table: tipo_documento ************************/

/* Build Table Structure */
CREATE TABLE tipo_documento
(
	id BIGINT DEFAULT nextval('tipo_documento_id_seq'::regclass) NOT NULL,
	created_at TIMESTAMP DEFAULT now() NOT NULL,
	updated_at TIMESTAMP DEFAULT now() NOT NULL,
	deleted_at TIMESTAMP NULL,
	nombre VARCHAR(45) NOT NULL
) WITHOUT OIDS;

/* Add Primary Key */
ALTER TABLE tipo_documento ADD CONSTRAINT pktipo_documento
	PRIMARY KEY (id);


/******************** Add Table: tipo_pqrs ************************/

/* Build Table Structure */
CREATE TABLE tipo_pqrs
(
	id BIGINT DEFAULT nextval('public.tipo_pqrs_id_seq'::regclass) NOT NULL,
	nombre VARCHAR(50) NOT NULL,
	actived BOOL DEFAULT 't' NOT NULL,
	created_at TIMESTAMP DEFAULT now() NOT NULL,
	updated_at TIMESTAMP DEFAULT now() NOT NULL,
	deleted_at TIMESTAMP NULL
) WITHOUT OIDS;

/* Add Primary Key */
ALTER TABLE tipo_pqrs ADD CONSTRAINT pktipo_pqrs
	PRIMARY KEY (id);

/* Add Comments */
COMMENT ON COLUMN tipo_pqrs.actived IS 'TRUE activado ; FALSE desactivado';


/******************** Add Table: usuario ************************/

/* Build Table Structure */



/******************** Add Table: usuario_credencial ************************/

/* Build Table Structure */

/******************** Add Table: usuario_gusta_categoria ************************/

/* Build Table Structure */
CREATE TABLE usuario_gusta_categoria
(
	id BIGINT DEFAULT nextval('usuario_gusta_categoria_id_seq'::regclass) NOT NULL,
	created_at TIMESTAMP DEFAULT now() NOT NULL,
	updated_at TIMESTAMP DEFAULT now() NOT NULL,
	usuario_id BIGINT NOT NULL,
	categoria_id BIGINT NOT NULL
) WITHOUT OIDS;

/* Add Primary Key */
ALTER TABLE usuario_gusta_categoria ADD CONSTRAINT pkusuario_gusta_categoria
	PRIMARY KEY (id);

/* Add Indexes */
CREATE INDEX "usuario_gusta_categoria_categoria_id_Idx" ON usuario_gusta_categoria USING btree (categoria_id);

CREATE INDEX "usuario_gusta_categoria_usuario_id_Idx" ON usuario_gusta_categoria USING btree (usuario_id);

CREATE UNIQUE INDEX "usuario_gusta_categoria_usuario_id_categoria_id_Idx" ON usuario_gusta_categoria USING btree (usuario_id, categoria_id);


/************ Add Foreign Keys ***************/

/* Add Foreign Key: fk_bitacora_usuario */

/* Add Foreign Key: fk_dato_usuario_localidad */
ALTER TABLE dato_usuario ADD CONSTRAINT fk_dato_usuario_localidad
	FOREIGN KEY (localidad_id) REFERENCES localidad (id)
	ON UPDATE RESTRICT ON DELETE RESTRICT;

/* Add Foreign Key: fk_dato_usuario_organizacion */
ALTER TABLE dato_usuario ADD CONSTRAINT fk_dato_usuario_organizacion
	FOREIGN KEY (organizacion_id) REFERENCES organizacion (id)
	ON UPDATE RESTRICT ON DELETE RESTRICT;

/* Add Foreign Key: fk_dato_usuario_tipo_documento */
ALTER TABLE dato_usuario ADD CONSTRAINT fk_dato_usuario_tipo_documento
	FOREIGN KEY (tipo_documento_id) REFERENCES tipo_documento (id)
	ON UPDATE RESTRICT ON DELETE RESTRICT;

/* Add Foreign Key: fk_dato_usuario_usuario */
ALTER TABLE dato_usuario ADD CONSTRAINT fk_dato_usuario_usuario
	FOREIGN KEY (usuario_id) REFERENCES usuario (id)
	ON UPDATE RESTRICT ON DELETE RESTRICT;

/* Add Foreign Key: fk_detalle_pqrs_pqrs */
ALTER TABLE detalle_pqrs ADD CONSTRAINT fk_detalle_pqrs_pqrs
	FOREIGN KEY (pqrs_id) REFERENCES pqrs (id)
	ON UPDATE RESTRICT ON DELETE RESTRICT;

/* Add Foreign Key: fk_detalle_pqrs_usuario */
ALTER TABLE detalle_pqrs ADD CONSTRAINT fk_detalle_pqrs_usuario
	FOREIGN KEY (usuario_id) REFERENCES usuario (id)
	ON UPDATE RESTRICT ON DELETE RESTRICT;

/* Add Foreign Key: fk_evento_categoria */
ALTER TABLE evento ADD CONSTRAINT fk_evento_categoria
	FOREIGN KEY (categoria_id) REFERENCES categoria (id)
	ON UPDATE RESTRICT ON DELETE RESTRICT;

/* Add Foreign Key: fk_evento_usuario */
ALTER TABLE evento ADD CONSTRAINT fk_evento_usuario
	FOREIGN KEY (usuario_id) REFERENCES usuario (id)
	ON UPDATE RESTRICT ON DELETE RESTRICT;

/* Add Foreign Key: fk_evento_patrocinador_evento */
ALTER TABLE evento_patrocinador ADD CONSTRAINT fk_evento_patrocinador_evento
	FOREIGN KEY (evento_id) REFERENCES evento (id)
	ON UPDATE RESTRICT ON DELETE RESTRICT;

/* Add Foreign Key: fk_evento_patrocinador_patrocinador */
ALTER TABLE evento_patrocinador ADD CONSTRAINT fk_evento_patrocinador_patrocinador
	FOREIGN KEY (patrocinador_id) REFERENCES patrocinador (id)
	ON UPDATE RESTRICT ON DELETE RESTRICT;

/* Add Foreign Key: fk_localidad_localidad */
ALTER TABLE localidad ADD CONSTRAINT fk_localidad_localidad
	FOREIGN KEY (localidad_id) REFERENCES localidad (id)
	ON UPDATE RESTRICT ON DELETE RESTRICT;

/* Add Foreign Key: fk_pqrs_estado_pqrs */
ALTER TABLE pqrs ADD CONSTRAINT fk_pqrs_estado_pqrs
	FOREIGN KEY (estado_pqrs_id) REFERENCES estado_pqrs (id)
	ON UPDATE RESTRICT ON DELETE RESTRICT;

/* Add Foreign Key: fk_pqrs_tipo_pqrs */
ALTER TABLE pqrs ADD CONSTRAINT fk_pqrs_tipo_pqrs
	FOREIGN KEY (tipo_pqrs_id) REFERENCES tipo_pqrs (id)
	ON UPDATE RESTRICT ON DELETE RESTRICT;

/* Add Foreign Key: fk_pqrs_usuario */
ALTER TABLE pqrs ADD CONSTRAINT fk_pqrs_usuario
	FOREIGN KEY (usuario_id) REFERENCES usuario (id)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_recaudo_economico_evento */
ALTER TABLE recaudo_economico ADD CONSTRAINT fk_recaudo_economico_evento
	FOREIGN KEY (evento_id) REFERENCES evento (id)
	ON UPDATE RESTRICT ON DELETE RESTRICT;

/* Add Foreign Key: fk_recaudo_economico_tarifa */
ALTER TABLE recaudo_economico ADD CONSTRAINT fk_recaudo_economico_tarifa
	FOREIGN KEY (tarifa_id) REFERENCES tarifa (id)
	ON UPDATE RESTRICT ON DELETE RESTRICT;

/* Add Foreign Key: fk_recaudo_economico_usuario */
ALTER TABLE recaudo_economico ADD CONSTRAINT fk_recaudo_economico_usuario
	FOREIGN KEY (usuario_id) REFERENCES usuario (id)
	ON UPDATE RESTRICT ON DELETE RESTRICT;

/* Add Foreign Key: fk_recordar_me_usuario */


/* Add Foreign Key: fk_usuario_rol_rol */

/* Add Foreign Key: fk_usuario_rol_usuario */
ALTER TABLE usuario_credencial ADD CONSTRAINT fk_usuario_rol_usuario
	FOREIGN KEY (usuario_id) REFERENCES usuario (id)
	ON UPDATE RESTRICT ON DELETE RESTRICT;

/* Add Foreign Key: fk_usuario_gusta_categoria_categoria */
ALTER TABLE usuario_gusta_categoria ADD CONSTRAINT fk_usuario_gusta_categoria_categoria
	FOREIGN KEY (categoria_id) REFERENCES categoria (id)
	ON UPDATE RESTRICT ON DELETE RESTRICT;

/* Add Foreign Key: fk_usuario_gusta_categoria_usuario */
ALTER TABLE usuario_gusta_categoria ADD CONSTRAINT fk_usuario_gusta_categoria_usuario
	FOREIGN KEY (usuario_id) REFERENCES usuario (id)
	ON UPDATE RESTRICT ON DELETE RESTRICT;